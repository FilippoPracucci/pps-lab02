def mult(x: Double, y: Double): Double = x * y

def curriedMult(x: Double)(y: Double): Double = x * y

def divide(x: Double, y: Double): Double = x / y

def curriedDiv(x: Double)(y: Double): Double = x / y

def newLineWithIndent(s1: String, s2: String): String = s1 + "\n\t" + s2

def curriedNewLineWithIndent(s1: String)(s2: String): String = s1 + "\n\t" + s2

// test mult and curriedMult
val triple = curriedMult(3)

println(triple(5)) // 15

// test divide and curriedDiv
val third = divide(_, 3)

println(divide(14, 2)) // 7.0
println(third(15.6)) // 5.2
println(third(-3)) // -1.0

val half: Double => Double = curriedDiv(_)(2)

println(half(12)) // 6.0
println(half(1)) // 0.5
println(half(0)) // 0.0

// test newLineWithIndent and curriedNewLineWithIndent
val curriedNewLineWithIndentAsFunction: String => String => String = s1 => s2 => s1 + "\n\t" + s2 

println(newLineWithIndent("match", "case")) // match
					    //     case	

println(curriedNewLineWithIndent("match")("case")) // match
					    	   //     case

println(curriedNewLineWithIndent("match")("case")) // match
					    	   //     case	

println(curriedNewLineWithIndentAsFunction("match")) // rs$line$26$$$Lambda/0x000001c801525000@43374d61	


